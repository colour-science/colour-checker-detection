from .common import (
    DTYPE_INT_DEFAULT,
    DTYPE_FLOAT_DEFAULT,
    SETTINGS_DETECTION_COLORCHECKER_CLASSIC,
    SETTINGS_DETECTION_COLORCHECKER_SG,
    SETTINGS_CONTOUR_DETECTION_DEFAULT,
    as_int32_array,
    as_float32_array,
    swatch_masks,
    swatch_colours,
    reformat_image,
    transform_image,
    detect_contours,
    is_square,
    contour_centroid,
    scale_contour,
    approximate_contour,
    quadrilateralise_contours,
    largest_convex_quadrilateral,
    is_convex_quadrilateral,
    remove_stacked_contours,
    DataDetectionColourChecker,
    sample_colour_checker,
)
from .inference import (
    SETTINGS_INFERENCE_COLORCHECKER_CLASSIC,
    SETTINGS_INFERENCE_COLORCHECKER_CLASSIC_MINI,
    inferencer_default,
    detect_colour_checkers_inference,
)

from .segmentation import (
    SETTINGS_SEGMENTATION_COLORCHECKER_CLASSIC,
    SETTINGS_SEGMENTATION_COLORCHECKER_SG,
    SETTINGS_SEGMENTATION_COLORCHECKER_NANO,
    filter_contours,
    filter_contours_multifeature,
    cluster_swatches,
    filter_clusters,
    filter_clusters_by_swatches,
    group_swatches,
    order_centroids,
    determine_best_transformation,
    extract_colours,
    correct_flipped,
    check_residuals,
    plot_contours,
    plot_swatches_and_clusters,
    plot_colours,
    plot_colours_warped,
    segmenter_default,
    segmenter_warped,
    extractor_default,
    extractor_warped,
    detect_colour_checkers_segmentation,
)

from .templates import (
    Template,
    are_three_collinear,
    generate_template,
)

__all__ = [
    "DTYPE_INT_DEFAULT",
    "DTYPE_FLOAT_DEFAULT",
    "SETTINGS_DETECTION_COLORCHECKER_CLASSIC",
    "SETTINGS_DETECTION_COLORCHECKER_SG",
    "SETTINGS_CONTOUR_DETECTION_DEFAULT",
    "as_int32_array",
    "as_float32_array",
    "swatch_masks",
    "swatch_colours",
    "reformat_image",
    "transform_image",
    "detect_contours",
    "is_square",
    "contour_centroid",
    "scale_contour",
    "approximate_contour",
    "quadrilateralise_contours",
    "largest_convex_quadrilateral",
    "is_convex_quadrilateral",
    "remove_stacked_contours",
    "DataDetectionColourChecker",
    "sample_colour_checker",
]
__all__ += [
    "SETTINGS_SEGMENTATION_COLORCHECKER_CLASSIC",
    "SETTINGS_SEGMENTATION_COLORCHECKER_SG",
    "SETTINGS_SEGMENTATION_COLORCHECKER_NANO",
    "filter_contours",
    "filter_contours_multifeature",
    "cluster_swatches",
    "filter_clusters",
    "filter_clusters_by_swatches",
    "group_swatches",
    "order_centroids",
    "determine_best_transformation",
    "extract_colours",
    "correct_flipped",
    "check_residuals",
    "plot_contours",
    "plot_swatches_and_clusters",
    "plot_colours",
    "plot_colours_warped",
    "segmenter_default",
    "segmenter_warped",
    "extractor_default",
    "extractor_warped",
    "extract_colour_checkers_segmentation",
    "detect_colour_checkers_segmentation",
]
__all__ += [
    "SETTINGS_INFERENCE_COLORCHECKER_CLASSIC",
    "SETTINGS_INFERENCE_COLORCHECKER_CLASSIC_MINI",
    "inferencer_default",
    "detect_colour_checkers_inference",
]

__all__ += [
    "Template",
    "are_three_collinear",
    "generate_template",
]
